'We cant have something in select/having/order by that isnt in group by.'
    why? - MySQL implements detection of functional dependence. - https://dev.mysql.com/doc/refman/8.4/en/group-by-handling.html 
    - the ONLY_FULL_GROUP_BY SQL mode is enabled by default. 
     - MySQL rejects queries for which the select list, HAVING condition, or ORDER BY list refer to nonaggregated columns that are neither named in the GROUP BY clause nor are functionally dependent on them.
         
    - how do disable it?
        - ?

    - However MySQL also permits a nonaggregate column not named in a GROUP BY clause when SQL ONLY_FULL_GROUP_BY mode is enabled, provided that this column is limited to a single value, 
    - we can have multiple non-aggregate colmns as well, its just those colmns must be limited to having single values (how? like we can apply where clause for that, which will make sure, that that colmn will have single value.)

__________________________________________________________________________________________________

BLOB or TEXT -A field with a maximum length of 65535 characters. BLOBs are "Binary Large Objects" 
             -used to store large amounts of binary data, such as images or other types of files. 
             -Fields defined as TEXT also hold large amounts of data.
            - 'The difference between the two is that the sorts and comparisons on the stored data are case sensitive on BLOBs and are not case sensitive in TEXT fields'.
             You do not specify a length with BLOB or TEXT.

__________________________________________________________________________________________________             
["auto_increment can be used only for int columns"]

["A table must have at least 1 column"]
__________________________________________________________________________________________________

To add foreign key there are 2 syntaxes for MySQL
    `CREATE TABLE table1(
        id INT PRIMARY KEY,
        name VARCHAR(20),
        fkiD INT,
        FOREIGN KEY (fkiD) REFERENCES table2(id2)
    );`

    or

    `CREATE TABLE table1(
        id INT PRIMARY KEY,
        name VARCHAR(20),
        fkiD INT,
        CONSTRAINT fk_id FOREIGN KEY (fkiD) REFERENCES table2(id2)
    );`


[You can not add ON DELETE CASCADE to an already existing constraint. You will have to drop and re-create the constraint.]